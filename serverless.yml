# Change to user's credentials
# org: users-credentials
service: nam-group24
frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.6
  lambdaHashingVersion: 20201221
  environment:
    DYNAMODB_TABLE: accnts # Will create a dynamodb table named accounts
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Scan
        - dynamodb:UpdateItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:*:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions: # not yet in use
  hello:
    handler: handler.hello
  getDB:
    handler: backend/get_accounts.handler
    events:
      - http:
          path: db
          method: get
          cors: true
  getAcct:
    handler: backend/get_account.handler
    events:
      - http:
          path: db/{acct_id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                acct_id: true

resources:
  Resources:
    accounts:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: acct_id
            AttributeType: N
        KeySchema:
          - AttributeName: acct_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-plugin-scripts

custom:
  scripts:
    commands:
      init-db: aws dynamodb put-item --table-name ${self:provider.environment.DYNAMODB_TABLE} --item file://default-account.json

package:
  individually: true
